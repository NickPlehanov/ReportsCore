<mah:MetroWindow  xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" x:Class="ReportsCore.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ReportsCore" 
                  xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" 
                  xmlns:vm="clr-namespace:ReportsCore.ViewModels" 
                  xmlns:helpers="clr-namespace:ReportsCore.Helpers" 
                  xmlns:mah1="http://schemas.microsoft.com/netfx/2009/xaml/presentation" 
                  xmlns:converters="clr-namespace:ReportsCore.Helpers.Converters" xmlns:tb="http://www.hardcodet.net/taskbar" xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase" xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                  mc:Ignorable="d"
        Title="Reports" Height="450" Width="800" x:Name="MainW" >
    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <Button Foreground="White" BorderThickness="0" Width="35" Command="{Binding MenuOpen}">
                <iconPacks:BootstrapIcons Kind="MenuApp"/>
            </Button>
            <Button Foreground="White" BorderThickness="0" Width="35" Command="{Binding FilterOpen}">
                <iconPacks:BootstrapIcons Kind="Filter"/>
            </Button>
            <Button Foreground="White" BorderThickness="0" Width="35" Command="{Binding CreateWordReport}">
                <iconPacks:BootstrapIcons Kind="Printer"/>
            </Button>
            <Button Foreground="White" BorderThickness="0" Width="35" Command="{Binding CreatePdfReport}">
                <iconPacks:BootstrapIcons Kind="PrinterFill"/>
            </Button>
            <!--<Button Foreground="White" BorderThickness="0" Width="35" Command="{Binding Test}">
                <iconPacks:PackIconMaterialDesign Kind="_3dRotation"/>
            </Button>-->
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <helpers:SearchControl Watermark="Укажите искомое значение" Text="{Binding FilterParameter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="300" Margin="5" 
                                   SearchCommand="{Binding Search}" ClearSearchQuery="{Binding ClearFilter}"/>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <mah:MetroWindow.DataContext>
        <vm:MainWindowViewModel/>
    </mah:MetroWindow.DataContext>
    <Grid>
        <Grid.Resources>
            <CollectionViewSource x:Key="ChangeCostMonthlyPay" Source="{Binding Reports}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="WhoChanged"/>
                </CollectionViewSource.GroupDescriptions>
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="DateStart"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
            <CollectionViewSource x:Key="Acts" Source="{Binding Reports}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="ObjectNumber"/>
                    <PropertyGroupDescription PropertyName="DateSort"/>
                </CollectionViewSource.GroupDescriptions>
                <CollectionViewSource.SortDescriptions >
                    <scm:SortDescription PropertyName="ObjectNumber"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
            <CollectionViewSource x:Key="LatePult" Source="{Binding Reports}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="HourSort"/>
                </CollectionViewSource.GroupDescriptions>
                <CollectionViewSource.SortDescriptions >
                    <scm:SortDescription PropertyName="Alarm"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
            <CollectionViewSource x:Key="LateGbr" Source="{Binding Reports}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="Group"/>
                    <PropertyGroupDescription PropertyName="HourSort"/>
                </CollectionViewSource.GroupDescriptions>
                <CollectionViewSource.SortDescriptions >
                    <scm:SortDescription PropertyName="Alarm"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
            <CollectionViewSource x:Key="ReglamentWorks" Source="{Binding Reports}" >
                <CollectionViewSource.SortDescriptions >
                    <scm:SortDescription PropertyName="ObjectNumber"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
            <CollectionViewSource x:Key="AgreementDetail" Source="{Binding AgreementDetail}" mah:MultiSelectorHelper.SelectedItems="{Binding SelectedReportData}">
                <CollectionViewSource.SortDescriptions >
                    <scm:SortDescription PropertyName="AgreementDate"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>
        </Grid.Resources>
        <mah:Flyout Position="Left" Header="Список отчётов" Width="250" AnimateOpacity="True" Panel.ZIndex="1" IsOpen="{Binding FlyoutMenuState}" mah:HeaderedControlHelper.HeaderFontWeight="UltraLight">
            <StackPanel Margin="5">
                <ComboBox SelectedItem="{Binding SelectedReport, Mode=TwoWay}" Text="Выберите отчёт" ItemsSource="{Binding ReportList}" DisplayMemberPath="ReportName" FontWeight="UltraLight" FontSize="16" />
                <Button Content="Показывать итоги" Visibility="Collapsed" Margin="5" Command="{Binding ViewTotalCommand}"/>

                <!--<DataGrid Margin="5" ItemsSource="{Binding ReportList}" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Название" Binding="{Binding ReportName}" Width="*"/>
                    </DataGrid.Columns>
                </DataGrid>-->
                <!--<Expander FontWeight="UltraLight">
                    <Expander.Header>
                        <TextBlock Text="Настройки отчёта"/>
                    </Expander.Header>
                    <StackPanel>
                        <Button Content="Изменить список столбцов" Margin="5" FontWeight="UltraLight" Command="{Binding MenuSettingColumnsOpen}"/>
                        <Button Content="Изменить условия фильтра" Margin="5" FontWeight="UltraLight" Command="{Binding MenuSettingsOpen}"/>
                    </StackPanel>
                </Expander>-->
            </StackPanel>
        </mah:Flyout>
        <mah:Flyout Position="Top" IsModal="True" AnimateOpacity="True" Panel.ZIndex="1" IsOpen="{Binding FlyoutSettingVisibleState}" mah:HeaderedControlHelper.HeaderFontWeight="UltraLight">
            <StackPanel>
                <!--Изменение стоимости абонентской платы-->
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0">
                        <mah1:DatePicker Margin="5" SelectedDateFormat="Short" SelectedDate="{Binding DateStart, StringFormat=\{0:dd.MM.yyyy\}}" FontSize="16" FontWeight="UltraLight"/>
                        <mah1:DatePicker Margin="5" SelectedDateFormat="Short" SelectedDate="{Binding DateEnd, StringFormat=\{0:dd.MM.yyyy\}}"  FontSize="16" FontWeight="UltraLight"/>
                        <!--<mah:DropDownButton ItemsSource="{Binding DatePatterns}" DisplayMemberPath="Name" Command="{Binding SelectDatePattern}">
                        <mah:DropDownButton.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:DropDownButton}},Path=DatePatterns.Name}"/>
                                <Setter Property="CommandParameter" Value="{Binding Name}"/>
                            </Style>
                        </mah:DropDownButton.ItemContainerStyle>
                    </mah:DropDownButton>-->
                    </StackPanel>
                    <StackPanel Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Button Content="Обновить" Command="{Binding GetData}" FontSize="16" FontWeight="UltraLight"/>
                    </StackPanel>
                    <StackPanel>

                    </StackPanel>
                </Grid>
                <!--Отчёт по актам-->
                <!--<Grid Visibility="{Binding VisibleAlarmActs, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0">
                        <mah1:DatePicker Margin="5" SelectedDateFormat="Short" SelectedDate="{Binding DateStart, StringFormat=\{0:dd.MM.yyyy\}}"/>
                        <mah1:DatePicker Margin="5" SelectedDateFormat="Short" SelectedDate="{Binding DateEnd, StringFormat=\{0:dd.MM.yyyy\}}"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Button Content="Обновить" Command="{Binding GetData}"/>
                    </StackPanel>
                </Grid>-->
            </StackPanel>
        </mah:Flyout>
        <mah:Flyout Position="Right" IsModal="True" AnimateOpacity="True" Panel.ZIndex="1" IsOpen="{Binding FlyoutSettingColumnsVisibleState}" mah:HeaderedControlHelper.HeaderFontWeight="UltraLight">
            <DataGrid ItemsSource="{Binding Columns}"/>
        </mah:Flyout>
        <!--<StackPanel Height="{Binding ActualWidth, ElementName=MainW}" Visibility="{Binding VisibleChangeCostMonthlyPay, Converter={StaticResource BooleanToVisibilityConverter}}">-->
        <DataGrid Panel.ZIndex="0" FontWeight="UltraLight" Visibility="{Binding VisibleChangeCostMonthlyPay, Converter={StaticResource BooleanToVisibilityConverter}}" 
                      CanUserReorderColumns="True" CanUserResizeColumns="True" CanUserSortColumns="True" ItemsSource="{Binding Source={StaticResource ChangeCostMonthlyPay}}" AutoGenerateColumns="False" 
                      CanUserAddRows="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Margin" Value="5"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="False" BorderThickness="1">
                                            <Expander.Header>
                                                <WrapPanel>
                                                    <TextBlock FontWeight="Bold" x:Name="ManagerName" Text="{Binding Name}" Margin="5"/>
                                                    <Button Content="Итоги" Command="{Binding DataContext.ViewTotalCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" CommandParameter="{Binding ElementName=ManagerName, Path=Text}"/>
                                                </WrapPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter/>
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.Resources>
                <!--Дата изменения-->
                <DataTemplate x:Key="dt_DateChanged">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=DateChanged,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_DateChanged">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=DateChanged,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <!--Дата подключения-->
                <DataTemplate x:Key="dt_DateStart">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=DateStart,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_DateStart">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=DateStart,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Номер объекта" Binding="{Binding ObjectNumber}" Visibility="{Binding ObjectNumberVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Название объекта" Binding="{Binding ObjectName}" Visibility="{Binding ObjectNameVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Адрес объекта" Binding="{Binding ObjectAddress}" Visibility="{Binding ObjectAddressrVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Кем изменено" Binding="{Binding WhoChanged}" Visibility="{Binding WhoChangedVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <!--<DataGridTextColumn Header="Дата" Binding="{Binding DateChanged}" Visibility="{Binding DateChangedVisibility}"/>-->
                <DataGridTemplateColumn Header="Дата изменения" CellTemplate="{StaticResource dt_DateChanged}" CellEditingTemplate="{StaticResource edt_DateChanged}" Visibility="{Binding DateChangedVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Было" Binding="{Binding Before}" Visibility="{Binding BeforeVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Стало" Binding="{Binding After}" Visibility="{Binding AfterVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <!--<DataGridTextColumn Header="Дата подключения" Binding="{Binding DateStart}" Visibility="{Binding DateStartVisibility}"/>-->
                <DataGridTemplateColumn Header="Дата подключения" CellTemplate="{StaticResource dt_DateStart}" CellEditingTemplate="{StaticResource edt_DateStart}" IsReadOnly="True" Visibility="{Binding DateStartVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Куратор" Binding="{Binding Curator}" Visibility="{Binding CuratorVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </DataGrid.Columns>
        </DataGrid>
        <DataGrid Panel.ZIndex="0" FontWeight="UltraLight" Visibility="{Binding VisibilityActs, Converter={StaticResource BooleanToVisibilityConverter}}" 
                      ItemsSource="{Binding Source={StaticResource Acts}}" CanUserReorderColumns="True" CanUserResizeColumns="True" CanUserSortColumns="True" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Margin" Value="5"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="False" BorderThickness="1">
                                            <Expander.Header>
                                                <StackPanel>
                                                    <TextBlock FontWeight="Bold" Text="{Binding Name}" Margin="5"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter/>
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.Resources>
                <!--Тревога-->
                <DataTemplate x:Key="dt_Alarm">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Alarm,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_Alarm">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Alarm,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <!--Отправка-->
                <DataTemplate x:Key="dt_Departure">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Departure,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_Departure">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Departure,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <!--Прибытие-->
                <DataTemplate x:Key="dt_Arrival">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Arrival,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_Arrival">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Arrival,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <!--Отмена-->
                <DataTemplate x:Key="dt_Cancel">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Cancel,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_Cancel">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Cancel,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Номер объекта" Binding="{Binding ObjectNumber}" Visibility="{Binding ObjectNumberVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Название объекта" Binding="{Binding ObjectName}" Visibility="{Binding ObjectNameVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Адрес объекта" Binding="{Binding ObjectAddress}" Visibility="{Binding ObjectAddressrVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridCheckBoxColumn Header="Акт" Binding="{Binding Act}" Visibility="{Binding ActVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridCheckBoxColumn Header="Полиция" Binding="{Binding Police}" Visibility="{Binding PoliceVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridCheckBoxColumn Header="Вызов х/о" Binding="{Binding Owner}" Visibility="{Binding OwnerVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Тревога" CellTemplate="{StaticResource dt_Alarm}" CellEditingTemplate="{StaticResource edt_Alarm}" IsReadOnly="True" Visibility="{Binding AlarmVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Отправка" CellTemplate="{StaticResource dt_Departure}" CellEditingTemplate="{StaticResource edt_Departure}" IsReadOnly="True" Visibility="{Binding DepartureVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Прибытие" CellTemplate="{StaticResource dt_Arrival}" CellEditingTemplate="{StaticResource edt_Arrival}" IsReadOnly="True" Visibility="{Binding ArrivalVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Отмена" CellTemplate="{StaticResource dt_Cancel}" CellEditingTemplate="{StaticResource edt_Cancel}" IsReadOnly="True" Visibility="{Binding CancelVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Результат" Binding="{Binding Result}" Width="{Binding ResultWidth}"/>
            </DataGrid.Columns>
        </DataGrid>
        <DataGrid Panel.ZIndex="0" FontWeight="UltraLight" Visibility="{Binding VisibilityLatesPult, Converter={StaticResource BooleanToVisibilityConverter}}" 
                  ItemsSource="{Binding Source={StaticResource LatePult}}" CanUserReorderColumns="True" CanUserResizeColumns="True" CanUserSortColumns="True" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Margin" Value="5"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="False" BorderThickness="1">
                                            <Expander.Header>
                                                <StackPanel>
                                                    <TextBlock FontWeight="Bold" Text="{Binding Name}" Margin="5"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter/>
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.Resources>
                <!--Тревога-->
                <DataTemplate x:Key="dt_Alarm">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Alarm,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_Alarm">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Alarm,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <!--Отправка-->
                <DataTemplate x:Key="dt_Departure">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Departure,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_Departure">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Departure,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <!--Прибытие-->
                <DataTemplate x:Key="dt_Arrival">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Arrival,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_Arrival">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Arrival,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <!--Отмена-->
                <DataTemplate x:Key="dt_Cancel">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Cancel,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_Cancel">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Cancel,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Номер объекта" Binding="{Binding ObjectNumber}" Visibility="{Binding ObjectNumberVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Название объекта" Binding="{Binding ObjectName}" Visibility="{Binding ObjectNameVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Адрес объекта" Binding="{Binding ObjectAddress}" Visibility="{Binding ObjectAddressrVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Группа" Binding="{Binding Group}"/>
                <DataGridCheckBoxColumn Header="Акт" Binding="{Binding Act}" Visibility="{Binding ActVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridCheckBoxColumn Header="Полиция" Binding="{Binding Police}" Visibility="{Binding PoliceVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridCheckBoxColumn Header="Вызов х/о" Binding="{Binding Owner}" Visibility="{Binding OwnerVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Тревога" CellTemplate="{StaticResource dt_Alarm}" CellEditingTemplate="{StaticResource edt_Alarm}" IsReadOnly="True" Visibility="{Binding AlarmVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Отправка" CellTemplate="{StaticResource dt_Departure}" CellEditingTemplate="{StaticResource edt_Departure}" IsReadOnly="True" Visibility="{Binding DepartureVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Прибытие" CellTemplate="{StaticResource dt_Arrival}" CellEditingTemplate="{StaticResource edt_Arrival}" IsReadOnly="True" Visibility="{Binding ArrivalVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Отмена" CellTemplate="{StaticResource dt_Cancel}" CellEditingTemplate="{StaticResource edt_Cancel}" IsReadOnly="True" Visibility="{Binding CancelVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Результат" Binding="{Binding Result}" Width="{Binding ResultWidth}"/>
                <DataGridTextColumn Header="Опоздание" Binding="{Binding Late}" Width="{Binding ResultWidth}"/>
            </DataGrid.Columns>
        </DataGrid>
        <DataGrid Panel.ZIndex="0" FontWeight="UltraLight" Visibility="{Binding VisibilityLatesGBR, Converter={StaticResource BooleanToVisibilityConverter}}" 
                  ItemsSource="{Binding Source={StaticResource LateGbr}}" CanUserReorderColumns="True" CanUserResizeColumns="True" CanUserSortColumns="True" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Margin" Value="5"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="False" BorderThickness="1">
                                            <Expander.Header>
                                                <StackPanel>
                                                    <TextBlock FontWeight="Bold" Text="{Binding Name}" Margin="5"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter/>
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
            <DataGrid.Resources>
                <!--Тревога-->
                <DataTemplate x:Key="dt_Alarm">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Alarm,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_Alarm">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Alarm,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <!--Отправка-->
                <DataTemplate x:Key="dt_Departure">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Departure,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_Departure">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Departure,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <!--Прибытие-->
                <DataTemplate x:Key="dt_Arrival">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Arrival,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_Arrival">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Arrival,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <!--Отмена-->
                <DataTemplate x:Key="dt_Cancel">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Cancel,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
                <DataTemplate x:Key="edt_Cancel">
                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=Cancel,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                </DataTemplate>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Номер объекта" Binding="{Binding ObjectNumber}" Visibility="{Binding ObjectNumberVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Название объекта" Binding="{Binding ObjectName}" Visibility="{Binding ObjectNameVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Адрес объекта" Binding="{Binding ObjectAddress}" Visibility="{Binding ObjectAddressrVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Группа" Binding="{Binding Group}"/>
                <DataGridCheckBoxColumn Header="Акт" Binding="{Binding Act}" Visibility="{Binding ActVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridCheckBoxColumn Header="Полиция" Binding="{Binding Police}" Visibility="{Binding PoliceVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridCheckBoxColumn Header="Вызов х/о" Binding="{Binding Owner}" Visibility="{Binding OwnerVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Тревога" CellTemplate="{StaticResource dt_Alarm}" CellEditingTemplate="{StaticResource edt_Alarm}" IsReadOnly="True" Visibility="{Binding AlarmVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Отправка" CellTemplate="{StaticResource dt_Departure}" CellEditingTemplate="{StaticResource edt_Departure}" IsReadOnly="True" Visibility="{Binding DepartureVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Прибытие" CellTemplate="{StaticResource dt_Arrival}" CellEditingTemplate="{StaticResource edt_Arrival}" IsReadOnly="True" Visibility="{Binding ArrivalVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTemplateColumn Header="Отмена" CellTemplate="{StaticResource dt_Cancel}" CellEditingTemplate="{StaticResource edt_Cancel}" IsReadOnly="True" Visibility="{Binding CancelVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Результат" Binding="{Binding Result}" Width="{Binding ResultWidth}"/>
                <DataGridTextColumn Header="Опоздание" Binding="{Binding Late}" Width="{Binding ResultWidth}"/>
            </DataGrid.Columns>
        </DataGrid>
        <DataGrid IsReadOnly="True" SelectedItem="{Binding SelectedReportData}" x:Name="dgReglamentWorks" Panel.ZIndex="0" FontWeight="UltraLight" Visibility="{Binding VisibilityReglamentWorks, Converter={StaticResource BooleanToVisibilityConverter}}" 
                  ItemsSource="{Binding Source={StaticResource ReglamentWorks}}" CanUserReorderColumns="True" CanUserResizeColumns="True" CanUserSortColumns="True" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <!--<b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseDoubleClick">
                    <b:InvokeCommandAction Command="{Binding DetailCommand}" CommandParameter="{Binding ElementName=dgReglamentWorks, Path=SelectedReportData}"/>
                </b:EventTrigger>
            </b:Interaction.Triggers>-->
            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{Binding Path=DetailCommand}" CommandParameter="{Binding ElementName=dgReglamentWorks, Path=SelectedItem}"/>
            </DataGrid.InputBindings>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Номер объекта" Binding="{Binding ObjectNumber}" Visibility="{Binding ObjectNumberVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Название объекта" Binding="{Binding ObjectName}" Visibility="{Binding ObjectNameVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridTextColumn Header="Адрес объекта" Binding="{Binding ObjectAddress}" Visibility="{Binding ObjectAddressrVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <DataGridCheckBoxColumn Header="Ежемес. рег. работы" Binding="{Binding RrEveryMonth}"/>
                <DataGridCheckBoxColumn Header="ОС рег. работы" Binding="{Binding RrOS}"/>
                <DataGridCheckBoxColumn Header="ПС рег. работы" Binding="{Binding RrPS}"/>
                <DataGridCheckBoxColumn Header="СКУД рег. работы" Binding="{Binding RrSkud}"/>
                <DataGridCheckBoxColumn Header="Видео рег. работы" Binding="{Binding RrVideo}"/>
            </DataGrid.Columns>
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <StackPanel>
                        <DataGrid x:Name="dg_agreement" Margin="5" ItemsSource="{Binding Source={StaticResource AgreementDetail}}" AutoGenerateColumns="False" CanUserReorderColumns="True" CanUserDeleteRows="False" CanUserAddRows="False" 
                                  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <DataGrid.Resources>
                                <DataTemplate x:Key="dt_AgreementDate">
                                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=AgreementDate,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                                <DataTemplate x:Key="edt_AgreementDate">
                                    <mah:DateTimePicker IsEnabled="False" Culture="ru-RU" SelectedDateTime="{Binding Mode=TwoWay, Path=AgreementDate,StringFormat=\{0:dd.MM.yyyy HH:mm:ss\}, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="№ договора" Binding="{Binding AgreementNumber}"/>
                                <DataGridTextColumn Header="Исполнитель" Binding="{Binding AgreementExecutor}"/>
                                <!--<DataGridTextColumn Header="Дата подписания" Binding="{Binding AgreementDate}"/>-->
                                <DataGridTemplateColumn CellTemplate="{StaticResource dt_AgreementDate}" CellEditingTemplate="{StaticResource edt_AgreementDate}" Header="Дата подписания"/>
                                <DataGridTextColumn Header="Тип договора" Binding="{Binding AgreementType}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <!--<DataGrid Margin="5" ItemsSource="{Binding ReglamentWorksDetailCollection}" CanUserAddRows="False" CanUserReorderColumns="True" CanUserResizeColumns="True" CanUserSortColumns="True" CanUserDeleteRows="False" AutoGenerateColumns="false" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Сотрудник" Binding="{Binding UserChanged}"/>
                                <DataGridTextColumn Header="Дата изменения" Binding="{Binding DateChanged}"/>
                                <DataGridTextColumn Header="Наименование поля" Binding="{Binding FieldChanged}"/>
                                <DataGridTextColumn Header="Было" Binding="{Binding BeforeChanged}"/>
                                <DataGridTextColumn Header="Стало" Binding="{Binding AfterChanged}"/>
                            </DataGrid.Columns>
                        </DataGrid>-->
                    </StackPanel>
                    <!--<DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="True">
                            <Setter TargetName="dg_agreement"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>-->
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Background="#35100110" Panel.ZIndex="2" Width="{Binding ActualWidth, ElementName=MainW}" Visibility="{Binding Loading, Converter={StaticResource BooleanToVisibilityConverter}}" Height="{Binding ActualHeight, ElementName=MainW}" Grid.ColumnSpan="3">
            <mah:ProgressRing IsActive="{Binding Loading}"/>
        </Grid>
    </Grid>

</mah:MetroWindow>
